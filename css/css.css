/*css rule*/
/* selector */
/* decleration block*/
/* decleration */
/* property */
/* value */

/* grouping */
h2,
p {
  color: red;
}

/* id */
/* id are unique */
#title {
  color: aquamarine;
  background: black;
}

/* class */

.green {
  color: green;
}
.red {
  color: red;
  background-color: blueviolet;
}

.upercase {
  text-transform: uppercase;
}

spam {
  text-transform: uppercase;
  color: aqua;
}

/* Inheretance*/

body {
  color: blue;
  font-family: monospace;
  line-height: 1.5;
  font-size: 20px;
}

.special {
  color: green;
  font-size: 30px;
}

/* last rule and specificity * universal selector */
/* specificity */
#redid {
  color: red;
}
.specials {
  color: blueviolet;
}
/* last rule */
p {
  color: red;
}

p {
  color: blue;
}

/* * */
* {
  color: brown;
}

/* background & backgrond-color */
/* color names & rgb,rgba.hex*/
/* 
hex values #rrggbb 
123456789ABCDEF
ex:
  #ff0000-red
  #00ff00-green
  #0000ff-blue
*/
.first {
  color: rgb(255, 255, 255);
  background-color: #000;
}

.second {
  color: rgba(255, 0, 0, 0.3);
  background: yellow;
}

/* Pixels - absolute values,one dot on the screen 
font-size 
width - width of an element
height - height of the element
*/

.xp {
  font-size: 60px;
  background: red;
  width: 200px;
  height: 400px;
}

/* percent - relative unit/value - depends on the parent */

.inner {
  width: 50%;
  height: 50%;
  background: red;
}

.outer {
  width: 200px;
  height: 400px;
  background: blue;
}

/* 
  em - relative, depends on parent
  1em-16px browser style
  2em = base value(16px) * 2 = 32px
  2em= base value(10px)*2=10px
 */

.absollute {
  font-size: 32px;
}
.relative {
  font-size: 2em;
}

/* 
  rem - relative,depends on root
  1rem=base value (16px) * number(1)
*/
html {
  font-size: 20px;
}

.absollute2 {
  font-size: 32px;
}
.relative2 {
  font-size: 2rem;
}

/* viewport units
  vh - height - percent  ofn the screen
  vw - width - percentmof the screen 
*/
/* * {
  margin: 0px;
} */
.hero {
  background: green;
  height: 100vh;
  width: 100vw;
}

/* calc()
  perform math operations +-*
  mix and match values
 */
* {
  margin: 0;
}

.navbar {
  background: blue;
  height: 100px;
  color: white;
  font-size: 3em;
}
/* min-height */
.banner {
  background: red;
  min-height: calc(100vh - 6rem);
  max-height: 90vh;
  overflow: scroll;
  overflow: hidden;
}
/* auto & overflow*/
.auto {
  background: green;
  width: 20rem;
  height: 25rem;
  overflow: hidden;
  overflow: scroll;
}

/* font-size  -  size of the fonts 
  font-family - describes the font 
*/

@import url("https://fonts.googleapis.com/css2?family=Open+Sans+Condensed:wght@300&family=Shizuru&display=swap");

body {
  font-family: sans-serif;
}

.p {
  font-family: "Shizuru", cursive;
  color: rgb(20, 224, 129);
  font-weight: 900;
  /* font-weight:bold; */
  /* font-weight:lighter; */
  font-style: italic;
  font-style: oblique;
  font-style: normal;
}

/* text-align text-indent*/

.p {
  text-align: center;
  text-indent: 6rem;
}

/* 
  line-height - if number * by font-size
  letter-spacing
  word-spacing
  text-transform
  text-decoration
*/
a {
  /* font-size: 3rem; */
  text-decoration: none;
  color: aqua;
}
body {
  line-height: 40px;
  line-height: 2;
}

.h1ss {
  font-size: 50px;
  text-decoration: line-through;
  text-transform: uppercase;
}

.one {
  letter-spacing: 5px;
  text-decoration: overline;
}

.two {
  word-spacing: 10px;
}

.three {
  text-transform: capitalize;
}

/* box model */

/* border, padding , margin , outline*/
.border,
.borderp {
  color: white;
}
/* * {
  margin: 0;
} */
.border {
  background: red;
  padding-top: 40px;
  padding-right: 20px;
  padding-bottom: 30px;
  padding-left: 50px;
  margin: 3rem;
  /* border-style: solid;
  border-width: 10px;
  border-color: chartreuse; */

  /* border-bottom: 10px dotted green; */

  border-bottom-style: double;
  border-bottom-color: aqua;
  border-bottom-width: 20px;
  border-radius: 50%;
}

.borderp {
  background: blue;
  /* padding: 40px; */
  /* padding: 40px 20px; */
  padding: 5px 20px 10px 15px;
  margin-top: -90px;
  margin-top: 90px;
  border: 1rem dashed red;
  border-radius: 50px;
}

.links {
  margin: 3rem;
}

.linkone,
.linktwo {
  background: green;
  text-decoration: none;
  padding: 1.2rem 1.5rem;
  color: #222;
  text-transform: uppercase;
  margin: 20px 20px;
}

.linkone {
  border: 0.2rem solid #222;
  outline: 0.2rem solid red;
  outline-offset: -5px;
}

.linktwo {
  outline-width: 0.2rem;
  outline-color: #222;
  outline-style: solid;
  outline-offset: 10px;
}
/* 
  display inline and block
  elements have it set by default
  block: always starts a new line and spans full width
  inline: does not start a new line and spans only content
*/

.block {
  background: blue;
  color: white;
  /* display: inline; */

  /* width: 300px;
  margin: 0 auto; */
}

.inline {
  background: red;
  color: white;
  /* display: block; */
}

/* body {
  text-align: center;
} */

/* navbar */
* {
  margin: 0;
  padding: 0;
  /* box-sizing: border-box; */
}
body {
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-size: 10px;
}

ul li {
  list-style-type: none;
}

ul li a {
  color: red;
  text-decoration: none;
  letter-spacing: 2px;
  background: #222;
  padding: 10px;
  display: block;
}

/* margin:0
padding:0
box-sizing: border-box
 */

/* *{
  margin:0;
  padding:0;
  box-sizing: border-box;
} */

.box-1,
.box-2,
.box-3 {
  width: 200px;
  height: 200px;
  color: white;
  font-size: 1.5rem;
}

.box-1 {
  background: red;
  padding: 20px;
  box-sizing: border-box;
}

.box-2 {
  background: blue;
}

.box-3 {
  background: green;
  padding: 20px;
}

/* 
display:inline-block
does not start a new line 
browser respects margin,width,height
*/

.h1heading {
}

.link1,
.link2,
.link3 {
  font-size: 1.5rem;
  background: red;
  width: 70px;
  height: 50px;
  margin: 40px 10px;
  display: inline-block;
}

/* 
display:none - remove element
opacity:0 preserve the space
*/

.none,
.opacity-1,
.opacity-5,
.opacity-0,
.visibility {
  background: red;
  margin: 10px;
  color: white;
  font-size: 1.3rem;
}

.none {
  display: none;
}
.opacity-1 {
  opacity: 1;
}

.opacity-5 {
  opacity: 0.5;
}

.opacity-0 {
  opacity: 0;
}

.visibility {
  visibility: hidden;
}

/*background img */

.big-img,
.small-img,
.folder-img {
  min-height: 100vh;
  height: 300px;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
}

.big-img {
  background: url("../img/king-chest.jpg");
  /* background-repeat: round;
  background-repeat: no-repeat; */

  /* background-repeat: no-repeat;
  background-size: cover;
  background-size: contain; */

  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
}

.small-img {
  background: url("../img/black-angel.jpg");
  background-repeat: no-repeat;
  /* background-repeat: repeat-x;
  background-repeat: repeat-y;
  background-repeat: space;
  background-repeat: round;
  background-repeat: no-repeat; */

  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  background-attachment: fixed;

  /* 
  background-repeat: no-repeat;
  background-size: cover; */
}

.folder-img {
  background: linear-gradient(
      to top,
      rgba(0, 0, 0, 0.3),
      rgba(255, 100, 239, 0.5)
    ),
    url("../img/purple-angel.jpg") center/cover no-repeat fixed;
  /* background-repeat: no-repeat; */

  /* background-repeat: no-repeat;
  background-size: cover;
  background-size: contain;
  background-position: center;

  background-position: 100% 100%; */
}

.one1,
.two2,
.three3,
.four4,
.five5,
.six6 {
  width: 150px;
  height: 150px;
  margin: 5px;
}

.one1 {
  background: linear-gradient(to top, blue, green);
}
.two2 {
  background: linear-gradient(to left, blue, green, red, yellow);
}
.three3 {
  background: linear-gradient(315deg, blue, green, red, yellow);
}
.four4 {
  background: linear-gradient(to top right, blue, green, red, yellow);
}

.five5 {
  background: linear-gradient(blue 80%, yellow);
}

.six6 {
  background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.6));
}

/* float,clear */
.bannner {
  border: 5px solid red;
  padding: 10px;
}

.img {
  float: right;
}

.clear {
  clear: both;
}

/* absolute,relative */

.absolutediv {
  border: 3px solid red;
  background: yellow;
  margin-top: 40px;
  color: white;
}

.absolutep1 {
  background: blue;
  color: white;
  position: relative;
  bottom: 2rem;
  right: 40px;
}
/* .absolutep2 {
  background: green;
  color: white;
  position: absolute;
  top: 9200px;
  left: 40px;
} */

.special {
  background: pink;
  color: white;
}

.nave {
  background: red;
  color: white;
  font-size: 1.5rem;
  text-transform: capitalize;
  position: sticky;
  margin-top: 0;
  top: 0;

  width: 100%;
}

/* media queries */
.media {
  background: blue;
}

.querie {
  color: white;
  text-align: center;
  text-decoration: underline;
  text-transform: capitalize;
}

@media screen and (min-width: 576px) {
  .media {
    background: yellow;
  }
}

@media screen and (min-width: 800px) {
  .media {
    background: green;
  }
}

/* z-index */

.img2 {
  width: 150px;
  height: 150px;
  position: absolute;
}

.divclass {
  margin: 20px;
  width: 80vw;
  height: 70vh;
  border: 5px solid green;
  position: relative;
}

.im1 {
  top: 0;
  left: 0;
  z-index: 3;
}

.im2 {
  top: 50px;
  left: 50px;
  z-index: 2;
}

.im3 {
  top: 100px;
  left: 100px;
  z-index: 1;
}

/* ::befor after always need a content or width and height*/

.pclass::before {
  content: "hello here ";
  font-weight: bold;
  font-size: 2rem;
  color: red;
}

.pclass::after {
  content: "hello  there";
  font-weight: bold;
  font-size: 2rem;
  color: red;
}
/*descendent and direct child*/
.headers .h1class {
  color: blue;
}

.headers > .h1class {
  color: purple;
}

/* ::first-letter ::firstline :hover */

.firstpi {
  background-color: white;
  color: #000;
}
.firstpi::first-letter {
  font-size: 150%;
}

.firstpi::first-line {
  font-weight: bold;
}

.firstpi:hover {
  color: blue;
}

/* :link unvisitted
:visited
:active */

.as:link {
  color: red;
}

.as:visited {
  color: blue;
}

.as:active {
  color: green;
}

/* transform:translate(),scale(),rotate(),skew()
transition-property
*/

.colorsb {
  width: 150px;
  height: 150px;
  display: inline-block;
}
.colorsb:hover {
  background: coral;
}
.re {
  background: red;
  transform: translate(200px, 300px);
}
.blu {
  background: blue;
  transform: scale(0.5);
  transform: skew(40deg, 30deg);
}

.gre {
  background: green;
  transform: rotate(45deg);
  transition-property: background;
  transition-duration: 4s;
  transition-delay: 2s;
}
